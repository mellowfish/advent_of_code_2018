defmodule DayFive do
  def shortest_polymer_length do
    shortest_polymer() |> Enum.count
  end

  def shortest_polymer do
    (for letter <- ?A..?Z, do: << letter :: utf8 >>)
    |> Enum.map(&polymer_without_unit(&1))
    |> Enum.sort_by(&Enum.count(&1))
    |> List.first
  end

  def naive_final_polymer_length do
    naive_final_polymer()
    |> Enum.count
  end

  def naive_final_polymer do
    letters()
    |> react_polymer
  end

  defp dedup_letters do
    letters()
    |> Enum.map(&String.upcase(&1))
    |> Enum.dedup
  end

  defp polymer_without_unit(capital_letter) do
    letters()
    |> Enum.reject(fn (letter) -> String.upcase(letter) == capital_letter end)
    |> react_polymer
  end

  defp react_polymer(polymer) do
    polymer
    |> Enum.reduce([], &consume_character(&1, &2))
    |> Enum.reverse
  end

  defp consume_character(new_character, partial_polymer) do
    if partial_polymer == [] do
      [new_character]
    else
      [previous_character | previous_polymer] = partial_polymer

      if String.upcase(new_character) == String.upcase(previous_character) && new_character != previous_character do
        previous_polymer
      else
        [new_character, previous_character | previous_polymer]
      end
    end
  end

  defp letters do
    File.stream!("input.txt", [], 1)
    |> Enum.map(&clean_line(&1))
    |> Enum.reject(fn (line) -> line == "" end)
  end

  defp clean_line(line) do
    String.replace(line, ~r/\n|\+/, "")
  end
end

IO.write "Naive final polymer: "    # 
IO.puts Enum.join(DayFive.naive_final_polymer(), "")
IO.write "Naive final polymer length: " # 11590
IO.inspect DayFive.naive_final_polymer_length()

# Note: "n/N" is the "problem" unit removed below
IO.write "Shortest final polymer: " # FIOHYPUSYfEcmKXCRKiZTkYEpKqomEwvUVMohWzMoiohjZEJRcOHLHrhDyaFIcaYKssvFOkfSFqDfGUEARGzyDejIsWuoFDUjozwbiGqxzIMCGrdlFcaOWIvAXEETQigRSRGOcsjklUbsZZDXCtdcuYokzrCBPOWEHiibFCjkSFFFiCEicBMKWpBdALKXBqrIRqDbbHGxDVAoZCCStoKwVsGOdmhjVOtaLPRqORXTLExtctLExZckalZwcmISGyRpsKoAzXQCzAhlIzdyXaGhZZHbrFPykzArFqFpDYioYAeoJOitLkgCTPMxIagELfAdfGEzFoYvhePgIrAiwdudZPjUvriJUdllKwkIjEHzPMjScXZPIsxooIGfbLuGEXHStecmGxjBVcYtrhhzXlRipSihZVdJIDlfuidyVxecKJKUfBMrVDuQmrUgQdfhvAVLibeyWhzzOEKKgZvSlOHdSmslSQoQMjzgmoaktbtvADBLEZqsfqFlvguvRpVqdmOmXEdGoXWWOsqHudFOQFbSwGMfxdQrYgiVewRVrZkRqWJvWHHftoHYQMeFHjBiHJrKmFPaoIYEJlgsKEgtjVAAbZGdEjeMTzbViLYtjdsywGVTVMMtkAiGbLOWqqZeWUiXCOCqjhxuMafOURYWsOyGQgZdkFoqlciFxvKOSkuIdmbQHWxHxHOmaOLRTEPFPAOSHRIriiLqIOGcIQXIGzlDYqIaXPVPDsBXSUReOyeKgThezqHicHAyfBrehuJiLJErpXSpAVfSmkfJExykfShrZOiFYvGyzbiEPIpgufWeIOcrcFLcXaHYjCbpaIdaroRsryDALDWfcXIuYUZSyjaqvmRXYIPlKKyfOSTCuRjuZDHPOCQQyZTYCMHMfqDvgcMwDocDJuHprUllBPDBMAAFsPSOOQZYmhraLeiwDRhvAFeCYGWtLCQLydWgvrxsRQYsoqMlgDXMzrcdfEOGhmXmSZdjmoLPjPjkIZQVaxZmGjOGoPdglXgHlVjqDbDGiLTMQClwEdvwKBRBsfjmuwsqtmmJkWaZxgtXUSSKOeYDetiHKFegsVQpzbFSQSilkhZfbHqUQPLihjQZEzvsdmdQJXGBWLeITvkOCbtjWVAocfZuKhxudXdgHTGPbhEVfzcVajHtHOZIgswCecojiFatZhDZsBgdikuSoLEUPQzSpxymFEtuYuWlUeYUTdOaTsjFwMZZPwGHlHFrgFkrabRRPEsUeWrsFMsTSUMLYbiaMOXlciLyVqyAXWgMcQuxpXibGMBXpGQsyjtYALmgCqTDaqrzgeafhVbJJajCDqmrvOyzUaHuWTQxDxtGGPiAMUofkyejQEiMPvQKTqARLUHtCseyQUAvBxLLCGPSFhbimbTeqhrjIdtjhaEicIrPOLcRXbFhATCYlOIqHeMYOqklioaeGMoueLWGsBAmcRTqgzBqWQYXOaIfwsoSbvIOtklSSIRbspFWsjmRjQcACFikqdvPqRDxuIBkaRAmXOtzopzyfsqEHQrLtxFibeUcjSIOagJejmIQkJobLtGIadtrTwaSQrSVAMajdOQZbtxqLJBDTEUKcimYQlHQrZPaqgqJRZZMTudKsqpEVAlmYwsacWjqiOEIjyHexeWFrbdPgPtxEbtqvprArqgWKFBAqVzLuAhskaMpRVAIOBKdrGHGbKeuCBqmLwxFwgizSqKlsuqEKjPjBxKpDefroQICMtAkYpTbFKASQheslWxgsTDlStyyTvYidIpxZgUpMeuJuOwlZHGUkuiGMHlrjbXBhJrwlhFBrCaampJZZWXYECawjsRuAyShDZhTCkxTpAyUvkGKbaDIbgaVEZjZQFkjPRjOBWzUMvqKKKuMibspjLSdwTBeQbgjtBrHdBqTqyjMuAfGqVAyeUvjSaSiMCWbspksOaiKiKyDkpBGGlOOWQSFQAqamryQmIZUzqiSYmyjvxeZPuDwJTBSIEqgfZOpVqwTvHVlXIQXptzDyVbfkezCmKgzAIopCdBXqYHmQFjXtZGwefOZlkdAdulPJVzUUwaEYwHMHVWGKtISPFdJhyqtOuxvFomWomLqHgoulJyXOBTigDrcQSfSKrrMTMaXHukERaVzBAKBubPcAluzahhFJDAuFUXGLQcMSMczRuoCQkmhKoUsyMLwMXLQxKgmFxWSXDKQSMifkMdZtSYWcOdGCkrlOdsRxbgaJDMPGCFIADCIQwdFrpKBHIRxTbKPlJeCXbklSAgiZizIGasLKBxcEjLpkBtXrhbkPRfDWqicdaifcgpmdjAGBXrSDoLRKcgDoCwysTzDmKFImsqkdxswXfMGkXqlxmWlmYSuOkHMKqcOUrZCmsmCqlgxufUadjfHHAZULaCpBUbkabZvAreKUhxAmtmRRksFsqCRdGItboxYjLUOGhQlMOwMOfVXUoTQYHjDfpsiTkgwvhmhWyeAWuuZvjpLUDaDKLzoFEWgzTxJfqMhyQxbDcPOiaZGkMcZEKFBvYdZTPxqixLvhVtWQvPozFGQeisbtjWdUpzEXVJYMysIQZuziMqYRMAQaqfsqwooLggbPKdYkIkIAoSKPSBwcmIsAsJVuEYavQgFaUmJYQtQbDhRbTJGBqEbtWDslJPSBImUkkkQVmuZwboJrpJKfqzJzevAGBidABkgKVuYaPtXKctHzdHsYaUrSJWAceyxwzzjPMAAcRbfHLWRjHbxBJRLhmgIUKughzLWoUjUEmPuGzXPiDIyVtYYTsLdtSGXwLSEHqsakfBtPyKaTmciqORFEdPkXbJpJkeQUSLkQsZIGWfXWlMQbcUEkBghgRDkboiavrPmAKSHaUlZvQabfkwGQRaRPVQTBeXTpGpDBRfwEXEhYJieoIQJwCASWyMLavePQSkDUtmzzrjQGQApzRqhLqyMICkuetdbjlQXTBzqoDJAmavsRqsAWtRTDAigTlBOjKqiMJEjGAoisJCuEBIfXTlRqheQSFYZPOZToxMarAKbiUXdrQpVDQKIfcaCqJrMJSwfPSBrissLKToiVBsOSWFiAoxyqwQbZGQtrCMabSgwlEUOmgEAOILKQoymEhQioLyctaHfBxrClopRiCIeAHJTDiJRHQEtBMIBHfspgcllXbVauqYEScThulraQtkqVpmIeqJEYKFOumaIpggTXdXqtwUhAuZYoVRMQdcJAjjBvHFAEGZRQAdtQcGMlayTJYSqgPxbmgBIxPXUqCmGwxaYQvYlICLxomAIBylmustSmfSRwEuSeprrBARKfGRfhLhgWpzzmWfJStAoDtuyEuLwUyUTefMYXPsZqpuelOsUKIDGbSzdHzTAfIJOCEcWSGizohThJAvCZFveHBpgthGDxDUXHkUzFCOavwJTBcoKVtiElwbgxjqDMDSVZezqJHIlpquQhBFzHKLIscYMqmyCqsfBZPqvSGEfkhITEdyEokssuxTGXzAwKjMMTQSWUMJFSbrbkWVDeWLcqmtlIgdBdQJvLhGxLGDpOgoJgMzXAvqziKJpJplOMJDzsMxMHgoeFDCRZmxdGLmQOSyqrSXRVGwDYlqclTwgycEfaVHrdWIElARHMyzqoospSfaambdpbLLuRPhUjdCOdWmCGVdQFmhmcytzYqqcophdzUJrUctsoFYkkLpiyxrMVQAJYszuyUixCFwdladYRSrORADiAPBcJyhAxClfCRCoiEwFUGPipeIBZYgVyfIozRHsFKYXejFKMsFvaPsxPRejlIjUHERbFYahCIhQZEHtGkEYoErusxbSdpvpxAiQydLZgixqiCgoiQlIIRirhsoapfpetrloAMohXhXwhqBMDiUKsokVXfICLQOfKDzYoSwyruoFAmUXHJQcocxIuwEzQQwolBgIaKTmmvtvgWYSDJTylIvBZtmEJeDgzBaavJTGekSGLjeyiOApfMkRjhIbJhfEmqyhOTFhhwVjwQrKzRvrWEvIGyRqDXFmgWsBfqofDUhQSowwxOgDexMoMDQvPrVUGVLfQFSQzelbdaVTBTKAOMGZJmqOqsLSMsDhoLsVzGkkeoZZHwYEBIlvaVHFDqGuRMqUdvRmbFukjkCEXvYDIUFLdijDvzHIsPIrLxZHHRTyCvbJXgMCETshxegUlBFgiOOXSipzxCsJmpZheJiKWkLLDujIRVuJpzDUDWIaRiGpEHVyOfZegFDaFleGAiXmptcGKlTIojOEayOIydPfQfRaZKYpfRBhzzHgAxYDZiLHaZcqxZaOkSPrYgsiMCWzLAKCzXelTCTXeltxroQrplATovJHMDogSvWkOTscczOavdXghBBdQriRQbxklaDbPwkmbCIecIfffsKJcfBIIhewopbcRZKOyUCDTcxdzzSBuLKJSCogrsrGIqteexaViwoACfLDRgcmiZXQgIBWZOJudfOUwSiJEdYZgraeugFdQfsFKofVSSkyACifAYdHRhlhoCrjezJHOIOmZwHOmvuVWeMOQkPeyKtzIkrcxkMCeFysupyhoif
IO.puts Enum.join(DayFive.shortest_polymer(), "")
IO.write "Shortest final polymer length: " # 4504
IO.inspect DayFive.shortest_polymer_length()
